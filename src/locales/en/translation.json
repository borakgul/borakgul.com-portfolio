{
    "nav": {
        "home": "Home",
        "about": "About",
        "work": "Work",
        "experience": "Experience",
        "projects": "Projects",
        "contact": "Contact"
    },
    "contact": {
        "title": "Contact me for collaboration",
        "description": "Reach out today to discuss your project needs and start collaborating on something amazing!",
        "name": "Name",
        "email": "Email",
        "message": "Message",
        "submit": "Submit"
    },
    "footer": {
        "headline": "Let's work together today!",
        "button": "Start project",
        "sitemap": "Sitemap",
        "socials": "Socials"
    },
    "header": {
        "contact": "Contact Me"
    },
    "hero": {
        "status": "Available for work",
        "headline_1": "More Than a Specialist,",
        "headline_2": "Less Than a Generalist",
        "headline_3": "—",
        "headline_4": "Just Aligned with Change.",
        "download_cv": "Download CV",
        "scroll": "Scroll down"
    },
    "review": {
        "title": "My Experience",
        "items": [
            {
                "name": "Huawei",
                "company": "Product Manager, 2024 - Present",
                "content": "As a Product Manager in the network domain, I drive solution design with engineering teams, align technical capabilities with client needs, and enhance delivery through Kubernetes and Docker-based automation.",
                "imgSrc": "/images/huawei_icon.png"
            },
            {
                "name": "Graduation Project",
                "company": "Control & Automation Eng., 2023",
                "content": "Graduated in Control and Automation Engineering with a thesis on designing a compact autonomous security robot using image processing and PID control on a Linux-based system.",
                "imgSrc": "/images/yildiz_technical_logo.png"
            },
            {
                "name": "Solvia Digital Solutions",
                "company": "MII Consultant Intern 2023",
                "content": "Enhanced manufacturing analytics by processing real-time MES data and visualizing KPIs in SAP MII using JavaScript and SAPUI5, while integrating system workflows with custom REST connectors.",
                "imgSrc": "/images/solvia_logo.png"
            },
            {
                "name": "Schnee-Gruppe",
                "company": "Automation Intern 2021",
                "content": "Implemented Siemens S7-1200 PLCs and customized SCADA/HMI systems in collaboration with the German team to enhance real-time control and diagnostics.",
                "imgSrc": "/images/schnee_logo.png"
            }
        ]
    },
    "work": {
        "title": "My Portfolio Highlights",
        "button": "View All Project and Descriptions →",
        "projects": [
            {
                "title": "MERN eCommerce w/ K8S",
                "tags": [
                    "MERN",
                    "JWT",
                    "Kubernetes"
                ]
            },
            {
                "title": "Parking Management System",
                "tags": [
                    ".NET Core",
                    "Entity Framework",
                    "SQL Server"
                ]
            },
            {
                "title": "Backend API w/ JWT & RBAC",
                "tags": [
                    "Node.js",
                    "MongoDB",
                    "RBAC"
                ]
            },
            {
                "title": "House Price Prediction (Top 50)",
                "tags": [
                    "ML",
                    "Stacking",
                    "Kaggle"
                ]
            },
            {
                "title": "VisaFlow",
                "tags": [
                    "Java",
                    "Spring Boot",
                    "AWS S3"
                ]
            },
            {
                "title": "Security Robot",
                "tags": [
                    "AI",
                    "Face Recognition",
                    "Embedded"
                ]
            }
        ]
    },
    "about": {
        "short": "Hi! I'm Bora — a backend and cloud-focused engineer working on distributed systems, automation, and MLOps pipelines. Currently building large-scale solutions at Huawei.",
        "long": "Welcome! I'm Bora Akgül, a Control and Automation Engineering graduate currently working at Huawei in the technology domain. I focus on designing scalable backend architectures, cloud-based solutions, and intelligent automation systems that combine engineering discipline with real-world impact.\n\nMy main areas of expertise include Backend Development, Cloud Computing, and Software Architecture. I work with technologies such as Java, Spring Boot, Python, Node.js, Docker, Kubernetes, and PostgreSQL to build reliable and high-performance systems. I also have experience with API development, microservices, CI/CD automation, and system integration.\n\nIn addition, I am developing strong competency in Artificial Intelligence Engineering, particularly in Machine Learning, MLOps, and Retrieval-Augmented Generation (RAG). I am passionate about building production-ready AI pipelines and data-driven systems that provide measurable value.\n\nI aim to create scalable, efficient, and future-proof technology solutions by integrating software engineering, cloud infrastructure, and intelligent automation. I believe in technical excellence, continuous improvement, and solving complex problems with a systematic approach.",
        "items": [
            {
                "label": "Projects completed",
                "number": 20
            },
            {
                "label": "Years of experience",
                "number": 2
            }
        ]
    },
    "projects": {
        "title": "My Projects",
        "viewOnGitHub": "View on GitHub",
        "items": [
            {
                "title": "Security Robot",
                "summary": "AI-powered surveillance robot with smart navigation and vision-based anomaly tracking.",
                "description": "An autonomous security robot designed for indoor surveillance and anomaly detection. The robot uses a PID-based motion controller for smooth navigation, enhanced by LIDAR-based SLAM mapping. Motion sensors detect environmental activity, while the onboard camera leverages real-time face recognition and computer vision (OpenCV) to detect fatigue or unauthorized presence. This project integrates robotics, embedded control systems, and advanced image processing into a cohesive real-world application.",
                "tech": [
                    "Python",
                    "OpenCV",
                    "LIDAR",
                    "PID Controller",
                    "Face Recognition",
                    "Sensor Fusion",
                    "Embedded Systems",
                    "Raspberry Pi",
                    "Arduino"
                ]
            },
            {
                "title": "VisaFlow — Visa Appointments & Documents Manager",
                "summary": "Tracks embassy appointment slots, shows country/type-specific checklists, and securely stores files.",
                "description": "VisaFlow periodically checks embassy appointment availability and sends instant alerts via a Telegram bot when slots open. It provides up-to-date document checklists by country and visa type. User files are stored securely on AWS S3 using presigned URLs. The backend is built with Java Spring Boot and PostgreSQL, featuring JWT authentication, role-based access (RBAC), and Dockerized deployment.",
                "tech": [
                    "Java",
                    "Spring Boot",
                    "PostgreSQL",
                    "AWS S3",
                    "Whatsapp API",
                    "JWT",
                    "RBAC",
                    "Docker"
                ]
            },
            {
                "title": "Anomaly Detection w/ Face Recognition",
                "summary": "Real-time drowsiness detection using facial landmarks and embedded alert system",
                "description": "A graduation project focused on preventing driver fatigue through real-time face and eye-tracking. Using Python, OpenCV, and Dlib, the system detects signs of drowsiness based on Eye Aspect Ratio (EAR) thresholds and facial landmarks. If abnormal behavior is detected, it triggers an audible alert via Arduino. The system includes servo-controlled camera tracking for dynamic face alignment and is designed to work in real driving conditions.",
                "tech": [
                    "Python",
                    "OpenCV",
                    "Dlib",
                    "face_recognition",
                    "Arduino UNO",
                    "Pan-Tilt Servo",
                    "Haar Cascade",
                    "EAR Calculation"
                ]
            },
            {
                "title": "Parking Management System",
                "summary": "Smart Parking / .NET",
                "description": "This Parking Management System is a WPF-based .NET Core desktop application designed to manage limited parking space efficiently. Vehicles are assigned dynamically to Lot A, B, or C based on availability and size. The system uses Entity Framework Core for data operations and follows the MVC architecture for clean code organization. Real-time parking status is displayed through a user-friendly Razor interface. The project includes SQL Server integration and supports unit testing via xUnit.",
                "tech": [
                    ".NET Core",
                    "Entity Framework",
                    "SQL Server",
                    "WPF",
                    "MVC",
                    "xUnit"
                ]
            },
            {
                "title": "Backend API w JWT & RBAC",
                "summary": "Backend API / JWT",
                "description": "Modular and scalable backend API for an e-commerce platform, built with Node.js, Express, and MongoDB. Features include JWT-based authentication, role-based access control (RBAC), and real-time updates via Server-Sent Events (SSE). Designed with clean architecture principles, Docker support, and production-ready configurations.",
                "tech": [
                    "Node.js",
                    "Express.js",
                    "MongoDB",
                    "Mongoose",
                    "JWT",
                    "RBAC",
                    "Docker",
                    "SSE",
                    "dotenv"
                ]
            },
            {
                "title": "Flight Simulation",
                "summary": "Autonomous Simulation with MVVM, TCP/UDP Messaging & xUnit-Tested Logic",
                "description": "A WPF-based flight simulation system built using the MVVM pattern and C#. It transmits structured data—like speed, altitude, attitude (pitch, roll, yaw), pressure, temperature, and GPS—every 0.02 seconds over TCP and UDP, using CRC8 for data integrity. PID control is used to simulate autonomous behavior, while real-time error codes are displayed in the UI. Each simulation is locally logged for later analysis. Communication logic is modular and tested with xUnit to ensure robustness.",
                "tech": [
                    "C#",
                    "WPF",
                    "MVVM",
                    "Entity Framework Core",
                    "TCP",
                    "UDP",
                    "CRC8 Hashing",
                    "xUnit",
                    "PID Control",
                    "LINQ",
                    "Async Programming"
                ]
            },
            {
                "title": "MERN Stack eCommerce w/ Kubernetes",
                "summary": "Full-Stack eCommerce Platform with JWT Auth, Redux, and Microservices on K8s",
                "description": "A production-ready eCommerce web app built with the MERN stack and Redux Toolkit for scalable state management. It includes payment methods, role-based access for users and admins, with features like product listings, cart, order tracking, and dashboards. The platform uses JWT authentication, MongoDB data seeding, and a responsive UI. Entirely containerized with Docker and orchestrated via Kubernetes (Minikube) to simulate real-world deployment.",
                "tech": [
                    "MongoDB",
                    "Express.js",
                    "React.js",
                    "Node.js",
                    "Redux Toolkit",
                    "JWT",
                    "Docker",
                    "Kubernetes",
                    "Minikube",
                    "REST API",
                    "Postman",
                    "MongoDB Atlas"
                ]
            },
            {
                "title": "Kaggle Competition (TOP 50) – House Price Prediction",
                "summary": "Accurate house price estimation using real estate data and ensemble machine learning models.",
                "description": "A machine learning project developed for a Kaggle competition using real-world housing market data from Ames, Iowa. The model predicts house prices by analyzing over 70 features including lot area, year built, living space, and garage capacity. The dataset includes realistic and noisy data, requiring advanced preprocessing: missing value imputation, one-hot encoding, outlier removal, and logarithmic target transformation. A stacked ensemble combining Linear Regression, Random Forest, and Gradient Boosting was implemented through a pipeline to ensure consistent data handling. The final model achieved an R² score of 0.91 and ranked in the top 50 on the public leaderboard.",
                "tech": [
                    "Python",
                    "Pandas",
                    "Scikit-Learn",
                    "Stacking Regressor",
                    "Random Forest",
                    "Linear Regression"
                ]
            },
            {
                "title": "Movie Recommendation System",
                "summary": "Collaborative Filtering & Matrix Factorization with Real-World Ratings",
                "description": "A machine learning-based movie recommendation system that suggests personalized content using collaborative filtering and matrix factorization. The system is trained on a real-world user-movie ratings dataset and predicts unseen movie ratings based on user similarity. Preprocessing includes normalization, feature engineering, and dimensionality reduction. Implemented in Python using TensorFlow and Scikit-learn, the model runs interactively through a Jupyter Notebook interface.",
                "tech": [
                    "Python",
                    "Pandas",
                    "NumPy",
                    "TensorFlow",
                    "Scikit-learn",
                    "Jupyter Notebook",
                    "Collaborative Filtering",
                    "Matrix Factorization"
                ]
            }
        ]
    },
    "skill": {
        "title": "Essential Tools I use",
        "description": "Discover the powerful tools and technologies I use to create exceptional, high-performing websites & applications."
    }
}